#
#
#
#
MIB: ISIS-MIB (file:StandardMibs/mib-rfc4444.txt) converted on Wed Nov  1 17:10:03 2023 using snmpttconvertmib v1.4.2
#
#
#
EVENT isisDatabaseOverload .1.3.6.1.2.1.138.0.1 "Status Events" Normal
FORMAT This notification is generated when the system $*
EXEC /bin/sh /etc/snmptt/external_command/process_check_result $aA jnx_snmptrap '$Fz' '2' >> /var/log/snmptt/snmptt_exec.log 2>&1
SDESC
This notification is generated when the system
enters or leaves the Overload state.  The number
of times this has been generated and cleared is kept
track of by isisSysStatLSPDbaseOloads.
Variables:
  1: isisNotificationSysLevelIndex
  2: isisSysLevelState
EDESC
#
#
#
EVENT isisManualAddressDrops .1.3.6.1.2.1.138.0.2 "Status Events" Normal
FORMAT This notification is generated when one of the $*
EXEC /bin/sh /etc/snmptt/external_command/process_check_result $aA jnx_snmptrap '$Fz' '2' >> /var/log/snmptt/snmptt_exec.log 2>&1
SDESC
This notification is generated when one of the
manual areaAddresses assigned to this system is
ignored when computing routes.  The object
isisNotificationAreaAddress describes the area that
has been dropped.
The number of times this event has been generated
is counted by isisSysStatManAddrDropFromAreas.
The agent must throttle the generation of
consecutive isisManualAddressDrops notifications
so that there is at least a 5-second gap between
notifications of this type.  When notifications
are throttled, they are dropped, not queued for
sending at a future time.
Variables:
  1: isisNotificationAreaAddress
EDESC
#
#
#
EVENT isisCorruptedLSPDetected .1.3.6.1.2.1.138.0.3 "Status Events" Normal
FORMAT This notification is generated when we find that $*
EXEC /bin/sh /etc/snmptt/external_command/process_check_result $aA jnx_snmptrap '$Fz' '2' >> /var/log/snmptt/snmptt_exec.log 2>&1
SDESC
This notification is generated when we find that
an LSP that was stored in memory has become
corrupted.  The number of times this has been
generated is counted by isisSysCorrLSPs.
We forward an LSP ID.  We may have independent
knowledge of the ID, but in some implementations
there is a chance that the ID itself will be
corrupted.
Variables:
  1: isisNotificationSysLevelIndex
  2: isisPduLspId
EDESC
#
#
#
EVENT isisAttemptToExceedMaxSequence .1.3.6.1.2.1.138.0.4 "Status Events" Normal
FORMAT When the sequence number on an LSP we generate $*
EXEC /bin/sh /etc/snmptt/external_command/process_check_result $aA jnx_snmptrap '$Fz' '2' >> /var/log/snmptt/snmptt_exec.log 2>&1
SDESC
When the sequence number on an LSP we generate
wraps the 32-bit sequence counter, we purge and
wait to re-announce this information.  This
notification describes that event.  Since these
should not be generated rapidly, we generate
an event each time this happens.
While the first 6 bytes of the LSPID are ours,
the other two contain useful information.
Variables:
  1: isisNotificationSysLevelIndex
  2: isisPduLspId
EDESC
#
#
#
EVENT isisIDLenMismatch .1.3.6.1.2.1.138.0.5 "Status Events" Normal
FORMAT A notification sent when we receive a PDU $*
EXEC /bin/sh /etc/snmptt/external_command/process_check_result $aA jnx_snmptrap '$Fz' '2' >> /var/log/snmptt/snmptt_exec.log 2>&1
SDESC
A notification sent when we receive a PDU
with a different value for the System ID Length.
This notification includes an index to identify
the circuit where we saw the PDU and the header of
the PDU, which may help a network manager identify
the source of the confusion.
The agent must throttle the generation of
consecutive isisIDLenMismatch notifications
so that there is at least a 5-second gap between
notifications of this type.  When notifications
are throttled, they are dropped, not queued for
sending at a future time.
Variables:
  1: isisNotificationSysLevelIndex
  2: isisPduFieldLen
  3: isisNotificationCircIfIndex
  4: isisPduFragment
EDESC
#
#
#
EVENT isisMaxAreaAddressesMismatch .1.3.6.1.2.1.138.0.6 "Status Events" Normal
FORMAT A notification sent when we receive a PDU $*
EXEC /bin/sh /etc/snmptt/external_command/process_check_result $aA jnx_snmptrap '$Fz' '2' >> /var/log/snmptt/snmptt_exec.log 2>&1
SDESC
A notification sent when we receive a PDU
with a different value for the Maximum Area
Addresses.  This notification includes the
header of the packet, which may help a
network manager identify the source of the
confusion.
The agent must throttle the generation of
consecutive isisMaxAreaAddressesMismatch
notifications so that there is at least a 5-second
gap between notifications of this type.  When
notifications are throttled, they are dropped, not
queued for sending at a future time.
Variables:
  1: isisNotificationSysLevelIndex
  2: isisPduMaxAreaAddress
  3: isisNotificationCircIfIndex
  4: isisPduFragment
EDESC
#
#
#
EVENT isisOwnLSPPurge .1.3.6.1.2.1.138.0.7 "Status Events" Normal
FORMAT A notification sent when we receive a PDU $*
EXEC /bin/sh /etc/snmptt/external_command/process_check_result $aA jnx_snmptrap '$Fz' '2' >> /var/log/snmptt/snmptt_exec.log 2>&1
SDESC
A notification sent when we receive a PDU
with our systemID and zero age.  This
notification includes the circuit Index
and router ID from the LSP, if available,
which may help a network manager
identify the source of the confusion.
Variables:
  1: isisNotificationSysLevelIndex
  2: isisNotificationCircIfIndex
  3: isisPduLspId
EDESC
#
#
#
EVENT isisSequenceNumberSkip .1.3.6.1.2.1.138.0.8 "Status Events" Normal
FORMAT When we receive an LSP with our System ID $*
EXEC /bin/sh /etc/snmptt/external_command/process_check_result $aA jnx_snmptrap '$Fz' '2' >> /var/log/snmptt/snmptt_exec.log 2>&1
SDESC
When we receive an LSP with our System ID
and different contents, we may need to reissue
the LSP with a higher sequence number.
We send this notification if we need to increase
the sequence number by more than one.  If two
Intermediate Systems are configured with the same
System ID, this notification will fire.
Variables:
  1: isisNotificationSysLevelIndex
  2: isisNotificationCircIfIndex
  3: isisPduLspId
EDESC
#
#
#
EVENT isisAuthenticationTypeFailure .1.3.6.1.2.1.138.0.9 "Status Events" Normal
FORMAT A notification sent when we receive a PDU $*
EXEC /bin/sh /etc/snmptt/external_command/process_check_result $aA jnx_snmptrap '$Fz' '2' >> /var/log/snmptt/snmptt_exec.log 2>&1
SDESC
A notification sent when we receive a PDU
with the wrong authentication type field.
This notification includes the header of the
packet, which may help a network manager
identify the source of the confusion.
The agent must throttle the generation of
consecutive isisAuthenticationTypeFailure
notifications so that there is at least a 5-second
gap between notifications of this type.  When
notifications are throttled, they are dropped, not
queued for sending at a future time.
Variables:
  1: isisNotificationSysLevelIndex
  2: isisNotificationCircIfIndex
  3: isisPduFragment
EDESC
#
#
#
EVENT isisAuthenticationFailure .1.3.6.1.2.1.138.0.10 "Status Events" Normal
FORMAT A notification sent when we receive a PDU $*
EXEC /bin/sh /etc/snmptt/external_command/process_check_result $aA jnx_snmptrap '$Fz' '2' >> /var/log/snmptt/snmptt_exec.log 2>&1
SDESC
A notification sent when we receive a PDU
with an incorrect authentication information
field.  This notification includes the header
of the packet, which may help a network manager
identify the source of the confusion.
The agent must throttle the generation of
consecutive isisAuthenticationFailure
notifications so that there is at least a 5-second
gap between notifications of this type.  When
notifications are throttled, they are dropped, not
queued for sending at a future time.
Variables:
  1: isisNotificationSysLevelIndex
  2: isisNotificationCircIfIndex
  3: isisPduFragment
EDESC
#
#
#
EVENT isisVersionSkew .1.3.6.1.2.1.138.0.11 "Status Events" Normal
FORMAT A notification sent when we receive a Hello $*
EXEC /bin/sh /etc/snmptt/external_command/process_check_result $aA jnx_snmptrap '$Fz' '2' >> /var/log/snmptt/snmptt_exec.log 2>&1
SDESC
A notification sent when we receive a Hello
PDU from an IS running a different version
of the protocol.  This notification includes
the header of the packet, which may help a
network manager identify the source of the
confusion.
The agent must throttle the generation of
consecutive isisVersionSkew notifications
so that there is at least a 5-second gap
between notifications of this type.  When
notifications are throttled, they are dropped, not
queued for sending at a future time.
Variables:
  1: isisNotificationSysLevelIndex
  2: isisNotificationCircIfIndex
  3: isisPduProtocolVersion
  4: isisPduFragment
EDESC
#
#
#
EVENT isisAreaMismatch .1.3.6.1.2.1.138.0.12 "Status Events" Normal
FORMAT A notification sent when we receive a Hello $*
EXEC /bin/sh /etc/snmptt/external_command/process_check_result $aA jnx_snmptrap '$Fz' '2' >> /var/log/snmptt/snmptt_exec.log 2>&1
SDESC
A notification sent when we receive a Hello
PDU from an IS that does not share any
area address.  This notification includes
the header of the packet, which may help a
network manager identify the source of the
confusion.
The agent must throttle the generation of
consecutive isisAreaMismatch notifications
so that there is at least a 5-second gap
between notifications of this type.  When
notifications are throttled, they are dropped, not
queued for sending at a future time.
Variables:
  1: isisNotificationCircIfIndex
  2: isisPduFragment
EDESC
#
#
#
EVENT isisRejectedAdjacency .1.3.6.1.2.1.138.0.13 "Status Events" Normal
FORMAT A notification sent when we receive a Hello $*
EXEC /bin/sh /etc/snmptt/external_command/process_check_result $aA jnx_snmptrap '$Fz' '2' >> /var/log/snmptt/snmptt_exec.log 2>&1
SDESC
A notification sent when we receive a Hello
PDU from an IS but do not establish an
adjacency for some reason.
The agent must throttle the generation of
consecutive isisRejectedAdjacency notifications
so that there is at least a 5-second gap
between notifications of this type.  When
notifications are throttled, they are dropped, not
queued for sending at a future time.
Variables:
  1: isisNotificationSysLevelIndex
  2: isisNotificationCircIfIndex
  3: isisPduFragment
EDESC
#
#
#
EVENT isisLSPTooLargeToPropagate .1.3.6.1.2.1.138.0.14 "Status Events" Normal
FORMAT A notification sent when we attempt to propagate $*
EXEC /bin/sh /etc/snmptt/external_command/process_check_result $aA jnx_snmptrap '$Fz' '2' >> /var/log/snmptt/snmptt_exec.log 2>&1
SDESC
A notification sent when we attempt to propagate
an LSP that is larger than the dataLinkBlockSize
for the circuit.
The agent must throttle the generation of
consecutive isisLSPTooLargeToPropagate notifications
so that there is at least a 5-second gap
between notifications of this type.  When
notifications are throttled, they are dropped, not
queued for sending at a future time.
Variables:
  1: isisNotificationSysLevelIndex
  2: isisNotificationCircIfIndex
  3: isisPduLspSize
  4: isisPduLspId
EDESC
#
#
#
EVENT isisOrigLSPBuffSizeMismatch .1.3.6.1.2.1.138.0.15 "Status Events" Normal
FORMAT A notification sent when a Level 1 LSP or Level $*
EXEC /bin/sh /etc/snmptt/external_command/process_check_result $aA jnx_snmptrap '$Fz' '2' >> /var/log/snmptt/snmptt_exec.log 2>&1
SDESC
A notification sent when a Level 1 LSP or Level
2 LSP is received that is larger than the local
value for isisSysLevelOrigLSPBuffSize, or when an
LSP is received that contains the supported Buffer Size
option and the value in the PDU option field does
not match the local value for isisSysLevelOrigLSPBuffSize.
We pass up the size from the option field and the
size of the LSP when one of them exceeds our configuration.
The agent must throttle the generation of
consecutive isisOrigLSPBuffSizeMismatch notifications
so that there is at least a 5-second gap
between notifications of this type.  When
notifications are throttled, they are dropped, not
queued for sending at a future time.
Variables:
  1: isisNotificationSysLevelIndex
  2: isisNotificationCircIfIndex
  3: isisPduLspId
  4: isisPduOriginatingBufferSize
  5: isisPduBufferSize
EDESC
#
#
#
EVENT isisProtocolsSupportedMismatch .1.3.6.1.2.1.138.0.16 "Status Events" Normal
FORMAT A notification sent when a non-pseudonode $*
EXEC /bin/sh /etc/snmptt/external_command/process_check_result $aA jnx_snmptrap '$Fz' '2' >> /var/log/snmptt/snmptt_exec.log 2>&1
SDESC
A notification sent when a non-pseudonode
segment 0 LSP is received that has no matching
protocols supported.  This may be because the system
does not generate the field, or because there are no
common elements.  The list of protocols supported
should be included in the notification: it may be
empty if the TLV is not supported, or if the
TLV is empty.
The agent must throttle the generation of
consecutive isisProtocolsSupportedMismatch
notifications so that there is at least a 5-second
gap between notifications of this type.  When
notifications are throttled, they are dropped, not
queued for sending at a future time.
Variables:
  1: isisNotificationSysLevelIndex
  2: isisNotificationCircIfIndex
  3: isisPduProtocolsSupported
  4: isisPduLspId
  5: isisPduFragment
EDESC
#
#
#
EVENT isisAdjacencyChange .1.3.6.1.2.1.138.0.17 "Status Events" Normal
FORMAT A notification sent when an adjacency changes $*
EXEC /bin/sh /etc/snmptt/external_command/process_check_result $aA jnx_snmptrap '$Fz' '2' >> /var/log/snmptt/snmptt_exec.log 2>&1
SDESC
A notification sent when an adjacency changes
state, entering or leaving state up.
The first 6 bytes of the isisPduLspId are the
SystemID of the adjacent IS.
The isisAdjState is the new state of the adjacency.
Variables:
  1: isisNotificationSysLevelIndex
  2: isisNotificationCircIfIndex
  3: isisPduLspId
  4: isisAdjState
EDESC
#
#
#
EVENT isisLSPErrorDetected .1.3.6.1.2.1.138.0.18 "Status Events" Normal
FORMAT This notification is generated when we receive $*
EXEC /bin/sh /etc/snmptt/external_command/process_check_result $aA jnx_snmptrap '$Fz' '2' >> /var/log/snmptt/snmptt_exec.log 2>&1
SDESC
This notification is generated when we receive
an LSP with a parse error.  The isisCircIfIndex
holds an index of the circuit on which the PDU
arrived.  The isisPduFragment holds the start of the
LSP, and the isisErrorOffset points to the problem.
If the problem is a malformed TLV, isisErrorOffset
points to the start of the TLV, and isisErrorTLVType
holds the value of the type.
If the problem is with the LSP header, isisErrorOffset
points to the suspicious byte.
The number of such LSPs is accumulated in
isisSysStatLSPErrors.
Variables:
  1: isisNotificationSysLevelIndex
  2: isisPduLspId
  3: isisNotificationCircIfIndex
  4: isisPduFragment
  5: isisErrorOffset
  6: isisErrorTLVType
EDESC
