
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    meta.helm.sh/release-name: pod-gateway
    meta.helm.sh/release-namespace: po-gateway
  labels:
    app.kubernetes.io/instance: pod-gateway
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pod-gateway
    app.kubernetes.io/version: v1.6.1
    helm.sh/chart: pod-gateway-5.6.2
  name: pod-gateway
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: pod-gateway
      app.kubernetes.io/name: pod-gateway
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: pod-gateway
        app.kubernetes.io/name: pod-gateway
    spec:
      automountServiceAccountToken: true
      containers:
      - name: sidecar-ssh-layer2-tunnel #sidecar-to-create-static-route
        image: 12345679898/openvpn-client:v2
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
        env:
        - name: DEVICE_IP_RANGE
          value: "100.1.20.0/27"
        - name: NEXTHOP_IP
          value: "10.101.254.5"
        - name: NEXTHOP_SSH_PASS
          value: "your_pass"
        command:
          - /bin/bash
          - -c
          - |
              while ! ip addr show tun0 | grep "inet " > /dev/null; do
                echo "Waiting for tun0 to be up and have an IP address assigned to it"
                sleep 1
              done
              echo "tun0 is UP"
              sleep 10

              # ip link del tap0
              mkdir /dev/net
              mknod /dev/net/tun c 10 200 # review these number later, OK for now
              # ip tuntap add tap0 mode tap
              # sleep 5

              sshpass -p "your_pass" ssh -v \
              -o StrictHostKeyChecking=no \
              -o "PermitLocalCommand=yes" \
              -o "LocalCommand=ifconfig tap0 up  \
                              && ifconfig tap0 192.168.100.1 netmask 255.255.255.0 \
                              && route add -net 100.1.20.0/27 gw 192.168.100.2" \
              -o Tunnel=ethernet \
              -o ConnectTimeout=5 \
              -w any:any -t root@10.101.254.5 \
              "ifconfig tap0 up \
              && ifconfig tap0 192.168.100.2 netmask 255.255.255.0" 
      - name: pod-gateway
        command:
        - /bin/gateway_sidecar.sh
        image: ghcr.io/k8s-at-home/pod-gateway:v1.6.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 4789
          name: http
          protocol: UDP
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /config
          name: config
          readOnly: true
      - name: openvpn
        image: dperson/openvpn-client:latest
        imagePullPolicy: Always
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /vpn/vpn.conf
          name: vpnconfig
          subPath: vpnConfigfile
        - mountPath: /vpn/auth.txt
          name: vpnconfig
          subPath: auth.txt
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      initContainers:
      - command:
        - /bin/gateway_init.sh
        image: ghcr.io/k8s-at-home/pod-gateway:v1.6.1
        imagePullPolicy: IfNotPresent
        name: routes
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /config
          name: config
          readOnly: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 365
          name: pod-gateway
        name: config
      - name: vpnconfig
        # secret:
        #   defaultMode: 420
        #   items:
        #   - key: vpnConfigfile
        #     path: vpnConfigfile
        #   secretName: openvpn
        configMap:
          name: vpnconfig
---
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: pod-gateway
    meta.helm.sh/release-namespace: po-gateway
  labels:
    app.kubernetes.io/instance: pod-gateway
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pod-gateway
    app.kubernetes.io/version: v1.6.1
    helm.sh/chart: pod-gateway-5.6.2
  name: pod-gateway
data:
  nat.conf: |
    # Generated by pod-gateway
  settings.sh: |
    #!/bin/sh
    # Generated by pod-gateway
    DNS_LOCAL_CIDRS="local"
    NOT_ROUTED_TO_GATEWAY_CIDRS=""
    VPN_BLOCK_OTHER_TRAFFIC="false"
    VPN_INTERFACE="tun0"
    VPN_LOCAL_CIDRS="10.0.0.0/8 172.16.0.0/16"
    VPN_TRAFFIC_PORT="1194"
    VXLAN_GATEWAY_FIRST_DYNAMIC_IP="20"
    VXLAN_ID="42"
    VXLAN_IP_NETWORK="192.168.10"


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vpnconfig
data:
  example.property.1: value1
  auth.txt: |
    your_user
    your_pass

  vpnConfigfile: |
    dev tun
    persist-tun
    persist-key
    ncp-disable
    cipher AES-128-CBC
    auth SHA1
    tls-client
    client
    resolv-retry infinite
    remote 10.101.0.2 10194 tcp4
    verify-x509-name "network.svtech.com.vn" name
    auth-user-pass auth.txt
    remote-cert-tls server
    passtos
    auth-nocache
    remote 113.190.233.64 10194 tcp
    remote 101.99.14.188 10194 tcp
    comp-lzo
    connect-timeout 10
    <ca>
    -----BEGIN CERTIFICATE-----
    ...
    -----END CERTIFICATE-----
    </ca>
    <cert>
    -----BEGIN CERTIFICATE-----
    ...
    -----END CERTIFICATE-----
    </cert>
    <key>
    -----BEGIN PRIVATE KEY-----
    ...
    -----END PRIVATE KEY-----
    </key>
    key-direction 1
    <tls-auth>
    #
    # 2048 bit OpenVPN static key
    #
    -----BEGIN OpenVPN Static key V1-----
    ...
    -----END OpenVPN Static key V1-----
    </tls-auth>


