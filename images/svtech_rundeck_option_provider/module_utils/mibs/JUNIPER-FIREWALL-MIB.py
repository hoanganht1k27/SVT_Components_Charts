#
# PySNMP MIB module JUNIPER-FIREWALL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///usr/share/snmp/mibs/mib-jnx-firewall.txt
# Produced by pysmi-0.3.2 at Mon Nov  5 17:28:15 2018
# On host Server platform Linux version 3.10.0-862.11.6.el7.x86_64 by user root
# Using Python version 2.7.5 (default, Jul 13 2018, 13:06:57) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
jnxMibs, = mibBuilder.importSymbols("JUNIPER-SMI", "jnxMibs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, MibIdentifier, IpAddress, TimeTicks, Counter64, Unsigned32, ModuleIdentity, Gauge32, iso, ObjectIdentity, Bits, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "MibIdentifier", "IpAddress", "TimeTicks", "Counter64", "Unsigned32", "ModuleIdentity", "Gauge32", "iso", "ObjectIdentity", "Bits", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
jnxFirewalls = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 5))
jnxFirewalls.setRevisions(('2016-01-23 15:53',))
if mibBuilder.loadTexts: jnxFirewalls.setLastUpdated('201601231553Z')
if mibBuilder.loadTexts: jnxFirewalls.setOrganization('Juniper Networks, Inc.')
jnxFirewallsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 5, 1), )
if mibBuilder.loadTexts: jnxFirewallsTable.setStatus('deprecated')
jnxFirewallsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 5, 1, 1), ).setIndexNames((0, "JUNIPER-FIREWALL-MIB", "jnxFWFilter"), (0, "JUNIPER-FIREWALL-MIB", "jnxFWCounter"))
if mibBuilder.loadTexts: jnxFirewallsEntry.setStatus('current')
jnxFWFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWFilter.setStatus('current')
jnxFWCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWCounter.setStatus('current')
jnxFWType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 5)).clone(namedValues=NamedValues(("other", 1), ("counter", 2), ("policer", 3), ("hpolagg", 4), ("hpolpre", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWType.setStatus('current')
jnxFWPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWPackets.setStatus('current')
jnxFWBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWBytes.setStatus('current')
jnxFirewallCounterTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 5, 2), )
if mibBuilder.loadTexts: jnxFirewallCounterTable.setStatus('current')
jnxFirewallCounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 5, 2, 1), ).setIndexNames((0, "JUNIPER-FIREWALL-MIB", "jnxFWCounterFilterName"), (0, "JUNIPER-FIREWALL-MIB", "jnxFWCounterName"), (0, "JUNIPER-FIREWALL-MIB", "jnxFWCounterType"))
if mibBuilder.loadTexts: jnxFirewallCounterEntry.setStatus('current')
jnxFWCounterFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127)))
if mibBuilder.loadTexts: jnxFWCounterFilterName.setStatus('current')
jnxFWCounterName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127)))
if mibBuilder.loadTexts: jnxFWCounterName.setStatus('current')
jnxFWCounterType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 5)).clone(namedValues=NamedValues(("other", 1), ("counter", 2), ("policer", 3), ("hpolagg", 4), ("hpolpre", 5))))
if mibBuilder.loadTexts: jnxFWCounterType.setStatus('current')
jnxFWCounterPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWCounterPacketCount.setStatus('current')
jnxFWCounterByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWCounterByteCount.setStatus('current')
jnxFWCounterDisplayFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWCounterDisplayFilterName.setStatus('current')
jnxFWCounterDisplayName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWCounterDisplayName.setStatus('current')
jnxFWCounterDisplayType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 2, 1, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 5)).clone(namedValues=NamedValues(("other", 1), ("counter", 2), ("policer", 3), ("hpolagg", 4), ("hpolpre", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWCounterDisplayType.setStatus('current')
jnxFWCntrXTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 5, 3), )
if mibBuilder.loadTexts: jnxFWCntrXTable.setStatus('current')
jnxFWCntrXEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 5, 3, 1), )
jnxFirewallCounterEntry.registerAugmentions(("JUNIPER-FIREWALL-MIB", "jnxFWCntrXEntry"))
jnxFWCntrXEntry.setIndexNames(*jnxFirewallCounterEntry.getIndexNames())
if mibBuilder.loadTexts: jnxFWCntrXEntry.setStatus('current')
jnxFWCntrPolicerOfferedPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 3, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWCntrPolicerOfferedPktCount.setStatus('current')
jnxFWCntrPolicerOfferedByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWCntrPolicerOfferedByteCount.setStatus('current')
jnxFWCntrPolicerOutSpecPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWCntrPolicerOutSpecPktCount.setStatus('current')
jnxFWCntrPolicerOutSpecByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWCntrPolicerOutSpecByteCount.setStatus('current')
jnxFWCntrPolicerTxPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWCntrPolicerTxPktCount.setStatus('current')
jnxFWCntrPolicerTxByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWCntrPolicerTxByteCount.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-FIREWALL-MIB", jnxFWCounterPacketCount=jnxFWCounterPacketCount, jnxFWCntrPolicerTxByteCount=jnxFWCntrPolicerTxByteCount, jnxFWCounterDisplayName=jnxFWCounterDisplayName, jnxFWType=jnxFWType, jnxFWCounterByteCount=jnxFWCounterByteCount, jnxFWBytes=jnxFWBytes, jnxFirewallsEntry=jnxFirewallsEntry, jnxFWCntrPolicerOfferedByteCount=jnxFWCntrPolicerOfferedByteCount, jnxFWCntrPolicerOfferedPktCount=jnxFWCntrPolicerOfferedPktCount, jnxFWCntrXEntry=jnxFWCntrXEntry, jnxFWCntrPolicerOutSpecByteCount=jnxFWCntrPolicerOutSpecByteCount, jnxFWCntrPolicerOutSpecPktCount=jnxFWCntrPolicerOutSpecPktCount, jnxFirewalls=jnxFirewalls, jnxFirewallCounterTable=jnxFirewallCounterTable, jnxFWCounterDisplayType=jnxFWCounterDisplayType, jnxFWCntrXTable=jnxFWCntrXTable, jnxFWPackets=jnxFWPackets, jnxFWCounter=jnxFWCounter, jnxFWFilter=jnxFWFilter, jnxFirewallsTable=jnxFirewallsTable, jnxFWCounterFilterName=jnxFWCounterFilterName, jnxFWCounterType=jnxFWCounterType, jnxFirewallCounterEntry=jnxFirewallCounterEntry, PYSNMP_MODULE_ID=jnxFirewalls, jnxFWCounterDisplayFilterName=jnxFWCounterDisplayFilterName, jnxFWCounterName=jnxFWCounterName, jnxFWCntrPolicerTxPktCount=jnxFWCntrPolicerTxPktCount)
