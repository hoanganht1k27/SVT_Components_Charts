######################################################################################################################
#This configuration file is used to set up all in put varible for Rundeck Options API. Admin can modify this file to #
#change varibles and add more options.                                                                               #
######################################################################################################################
---

api_url_config:
  datasource:
    datasource_query: /datasource_query
        # ?type={datasource_type}
        # &regex={regex_string} : filter speified Datasource name (optional)
        # &attribute={key_name} : return atribute value

  influxdb:
    influxdb_query: /influxdb_query
        # ?datasource={datasource_name}
        # &query={query_string}
        # &db={database_name} (optional)
        # &column={select_column} (optional)
        # &regex={regex_string} : regex to filter from result output (optional)

  livestatus:
    livestatus_query: /livestatus_query
        # ?datasource={datasource_name}
        # &data_type={data_type} (hosts, services, hostgroups, ...)
        # &filter={filter_query}: (display_name ~) for all
        # &column={select_column} (display_name, address, group, .....)
        # &regex={regex_string} : regex to filter from result output (optional)
    livestatus_query_custom_values: /livestatus_query/get_custom_values
        # ?datasource={datasource_name}
        # &data_type={data_type} (hosts, services, hostgroups, ...)
        # &filter={filter_query}: (display_name ~) for all
        # &column={select_column} : column name of custom variable (device_type, model, snmp_community,....)
        # &regex={regex_string} : regex to filter from result output (optional)

  # [HaDN] - 04/01/2022 - Add icinga2 url for icinga2 query
  icinga2:
    icinga2_api_query: /icinga2_query
        # ?datasource={datasource_name}
        # &endpoint_type={endpoint_type} (objects, templates, status)
        # &data_type={data_type} (hosts, services, hostgroups, ...)
        # &attr={atribute_fields}: ( ex: name,address )
        # &filter={filter_query}: regex("HNI",host.groups.to_string())&&regex(".*CSR.*",host.vars.device_type) (optional)
        # &join={true|false}: join all attr fields to string and asign to "join" field (optional)
        # &join_delimiter={delimiter for join rule}: (ex: " - ")  (optional)
        # &label_col={choose 1 attr field to be label field for rundeck option} (optional)
        # &value_col={choose 1 attr field to be value field for rundeck option} (optional)
        # &regex={regex_string} : regex to filter from result output (optional)
        # &regex_col={regex string for column name} : regex to filter from result output by column name. case of multi column (optional)

  mariadb:
    mariadb_query: /mariadb_query
        # ?datasource={datasource_name}
        # &query={query_string}
        # &db={database_name} (optional)
        # &column={select_column}
        # &regex={regex_string} : regex to filter from result output (optional)

  inventory:
    list_inventory: /list_inventory
        # ?exclude_inventory={exclude_inventory}  : split by ","

    inventory_file: /inventory_file
        # ?inventory_name={inventory_name}

    host_filter: /inventory/hostfilter
        # ?inventory_name={inventory_name}
        # &inventory_file={inventory_file}
        # &filter={filter}

  tableview:
    tableview_name: /tableview_name
    data_type: /tableview/data_type
        # ?table_view={table_view_name}

  dir_config:
    get_dir_config: /get_dir_config
        # ?path={path to item in yaml file}
        #   if result is dict:
              # &type={key or value}

  # [HaDN] - 22/04/2022 - Add regex_block option for get_file_content
  file:
    get_list_file: /get_list_file
    get_list_file_audit: /get_list_file_audit
        # ?path={file_path}
        # &type={file or dir} (optional)
        # &regex={regex} (optional)
    get_file_content: /get_file_content
        # ?path={file_path}
        # &regex_line={regex line}
        # &regex_text={regex text in line}
        # &start_str={start line} (optional)
        # &regex_block={block text regex} (optional)

dir_config:
  inventory:
    static_inventory_path: /opt/SVTECH-Junos-Automation/Ansible-Development/inventories/production/
    dynamic_inventory_file: /opt/SVTECH-Junos-Automation/module_utils/IcingaInventory.py

  tableview:
    list_tableview: /opt/SVTECH-Junos-Automation/Junos_tableview

  jsnapy:
    list_jsnapy: /opt/SVTECH-Junos-Automation/Jsnapy_test
