# Builder Monitoring Plugins Stage
FROM centos:7 as builder

RUN yum -y install wget ca-certificates net-tools telnet rsync openssl-libs vim epel-release postfix git bind-utils\
 && yum -y install ssmtp 'perl(Net::SNMP)' net-snmp-utils net-snmp-devel net-snmp net-snmp-libs\
 && wget --no-check-certificate -P /tmp  https://packages.icinga.com/centos/icinga-rpm-release-7-latest.noarch.rpm \
 && rpm -Uvh /tmp/icinga-rpm-release-7-latest.noarch.rpm \
 && yum -y install icinga2 icinga2-ido-mysql jemalloc nss_wrapper gettext \
 && yum clean all \
 && rm -rf /var/cache/yum

### Install Monitoring Plugins and prepara icinga2's temp folder
RUN yum -y install gcc make autoconf \
 && cd /var/tmp \
 && wget https://www.monitoring-plugins.org/download/monitoring-plugins-2.2.tar.gz \
 && tar -xvf monitoring-plugins-2.2.tar.gz \
 && chmod -R 775 monitoring-plugins-2.2 \
 && mkdir /usr/share/icinga2/plugins \
 && cd /var/tmp/monitoring-plugins-2.2 \
 && ./configure --with-cgiurl=/thruk/cgi-bin --prefix=/usr/share/icinga2/plugins \
 && make install \
 && make installcheck \
 && yum -y remove gcc make autoconf \
 && chmod -R 775 /usr/share/icinga2/plugins \
 && chown icinga:icinga /usr/share/icinga2/plugins \
 && rm -rf /var/tmp/monitoring-plugins-2.2.tar.gz /var/tmp/monitoring-plugins-2.2 \
 && /usr/lib/icinga2/prepare-dirs /dev/null \
 && yum clean all \
 && rm -rf /var/cache/yum 

# Final Stage
FROM centos:7

LABEL org.opencontainers.image.source=https://github.com/moophat/SVTECH_Projects_Container

RUN yum -y install wget ca-certificates net-tools telnet rsync openssl-libs vim epel-release postfix git bind-utils\
 && yum -y install ssmtp 'perl(Net::SNMP)' net-snmp-utils net-snmp-devel net-snmp net-snmp-libs\
 && wget --no-check-certificate -P /tmp  https://packages.icinga.com/centos/icinga-rpm-release-7-latest.noarch.rpm \
 && rpm -Uvh /tmp/icinga-rpm-release-7-latest.noarch.rpm \
 && yum -y install icinga2 icinga2-ido-mysql jemalloc nss_wrapper gettext \
 && yum clean all \
 && rm -rf /var/cache/yum

COPY --from=builder /usr/share/icinga2/plugins /usr/share/icinga2/plugins
COPY --from=builder /run/icinga2 /run/icinga2

## ADD MORE DEPENDENCIES HERE
RUN yum -y install python3 python3-pip python3-devel \
 && pip3.6 install --no-cache-dir wheel==0.36.2 pip==19.3.1 setuptools==40.8.0 \
 && yum clean all \
 && rm -rf /var/cache/yum

### COPY Environment files
COPY ./configs /tmp/configs
COPY ./scripts /tmp/scripts
COPY ./requirements.txt /tmp/

#### Prepare env, config files for containers
RUN cp -rf /tmp/configs/motd/motd.sh /etc/profile.d \
 && cp -rf /tmp/configs/profile.d/env.sh /etc/profile.d \
 && cp -rf /tmp/configs/bashrc /tmp/bashrc \
 && cp -rf /tmp/configs/post-commit /tmp/post-commit \
 && cp -rf /tmp/configs/scripts/reload.sh /usr/bin/reload \
 && cat /tmp/bashrc >> /etc/bashrc 

#RUN pip3.6 install wheel==0.36.2 pip==19.3.1 setuptools==40.8.0
RUN yum -y install gcc make autoconf \
 && pip3.6 install --no-cache-dir -r /tmp/requirements.txt \
 && yum -y remove gcc make autoconf \
 && yum clean all \
 && rm -rf /var/cache/yum 

### Enable default icinga2 feature
RUN icinga2 feature enable api livestatus syslog \
 ### Setup Icinga2 API
 && icinga2 api setup \
 && sed -i '/const PluginDir = \"\/usr\/lib64\/nagios\/plugins\"/cconst PluginDir = \"\/usr\/share\/icinga2/plugins\/libexec\"' /etc/icinga2/constants.conf \
 && sed -i '/const PluginContribDir = \"\/usr\/lib64\/nagios\/plugins\"/cconst PluginContribDir = \"\/usr\/share\/icinga2/plugins\/libexec\"' /etc/icinga2/constants.conf \
 && cp -rf /tmp/configs/icinga2/* /etc/icinga2/ \
 && chmod -R 775 /etc/icinga2 \
 && chown -R icinga:icinga  /etc/icinga2 \
 && grep -qxF 'LD_PRELOAD=/lib64/libjemalloc.so.1' /etc/sysconfig/icinga2 || echo 'LD_PRELOAD=/lib64/libjemalloc.so.1' >> /etc/sysconfig/icinga2

USER root

ENV ROLE=master \
    COMMON_NAME=NMS \
    ZONE=master \
    # For master
    ICINGA_HOST=localhost \
    ICINGA_PORT=5665 \
    # For satellite
    PARENT_NAME=NMS01 \
    PARENT_ZONE=master \
    PARENT_HOST=""\
    PARENT_PORT=5665 \
    TRUSTEDCERT=/var/lib/icinga2/certs/trusted-parent.crt \
    # Influxdb info
    INFLUXDB_ENABLE="false" \
    INFLUXDB_HOST="" \
    INFLUXDB_PORT=8086 \
    INFLUXDB_DATABASE=influxdb_nms \
    INFLUXDB_USER=juniper \
    INFLUXDB_PASSWORD=juniper@123 \
    # IDO-MYSQL
    IDO_ENABLE="false" \
    IDO_HOST="" \
    IDO_PORT=3306 \
    IDO_USER=icinga \
    IDO_PASSWORD=icinga \
    IDO_DATABASE=icinga \
    # IDO_CATEGORIES=["DbCatConfig", "DbCatState", "DbCatAcknowledgement", "DbCatComment", "DbCatDowntime", "DbCatEventHandler", "DbCatFlapping", "DbCatNotification", "DbCatProgramStatus", "DbCatRetention", "DbCatStateHistory", "DbCatCheck"] \
    IDO_CATEGORIES='["DbCatConfig", "DbCatState", "DbCatAcknowledgement", "DbCatComment", "DbCatDowntime", "DbCatEventHandler", "DbCatFlapping", "DbCatNotification", "DbCatProgramStatus", "DbCatRetention", "DbCatStateHistory"]' \
    IDO_CLEANUP_STATEHISTORY="" \
    IDO_CLEANUP_NOTIFICAION="" \
    IDO_CLEANUP_SERVICECHECK="" \
    # Notifications
    NOTI_ENABLE="false" \
    MAILHUB_HOST="" \
    MAILHUB_PORT=25 \
    RELAY_EMAIL="ha.do@svtech.com.vn" \
    # ICINGADB
    ICINGADB_ENABLE="false" \
    REDIS_HOST="" \
    REDIS_PORT=6379

### Creating entrypoint script and passwd template file (for non-root purpose)
RUN mkdir -p /opt/scripts \
 && cp -rf /tmp/scripts/entrypoint.sh /opt/scripts/entrypoint.sh \
 && chmod -R 775 /opt/scripts \
 # && cp -rf /tmp/scripts/passwd.template /home/icinga/passwd.template \
 && mkdir -p /var/tmp/output \
 && chmod -R 777 /var/tmp/output \
 && mkdir -p /opt/default_config \
 && chmod -R 777 /opt/default_config \
 && chmod -R 775 /usr/bin/reload \
 && chown icinga:icinga /usr/bin/reload \
 && chmod -R 775 /usr/share/icinga2/plugins \
 && chown icinga:icinga /usr/share/icinga2/plugins \
 ### Comment default conf.d's files for unused puporse in k8s environment
 && for i in `find /etc/icinga2/conf.d/ \
    ! -name "api-users.conf" \
    ! -name "app.conf"  -type f`; do mv -- "$i" "${i}.bak"; done \
 && rsync -avzh /etc/icinga2/* /opt/default_config \
 && rsync -avzh /usr/share/icinga2/plugins/libexec/* /opt/default_plugin \
 && chmod -R 775 /etc/icinga2 /run/icinga2 \
 && chown -R icinga:icinga /etc/icinga2  /run/icinga2

# Add tini 
ENV TINI_VERSION=v0.19.0
ADD https://github.com/krallin/tini/releases/download/v0.19.0/tini /tini
ADD https://github.com/krallin/tini/releases/download/v0.19.0/tini.asc /tini.asc
RUN chmod a+x /tini 

ENTRYPOINT [ "/opt/scripts/entrypoint.sh" ]

