apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "common.names.fullname" . }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: debuger
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
    spec:
      # hostNetwork: true
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: filebeat
          image: docker.elastic.co/beats/filebeat:{{.Values.global.elasticsearch.version}}
          args: [
            "-c", "/etc/filebeat.yml",
            "-e",
          ]
          env:
          - name: ELASTICSEARCH_HOST
            value: {{ .Values.global.elasticsearch.clusterName }}-es-http
          - name: ELASTICSEARCH_PORT
            value: "9200"
          - name: ELASTICSEARCH_USERNAME
            valueFrom:
                secretKeyRef:
                  name: es-basic-auth
                  key: username
          - name: ELASTICSEARCH_PASSWORD
            valueFrom:
                secretKeyRef:
                  name: es-basic-auth
                  key: password
          - name: ELASTIC_CLOUD_ID
            value:
          - name: ELASTIC_CLOUD_AUTH
            value:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          securityContext:
            runAsUser: 0
            # If using Red Hat OpenShift uncomment this:
            #privileged: true
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
          - name: config
            mountPath: /etc/filebeat.yml
            readOnly: true
            subPath: filebeat.yml
          - name: offline-log
            mountPath: {{ .Values.global.rundeck.offlineLogFolder }}
          # - name: varlibdockercontainers
          #   mountPath: /var/lib/docker/containers
          #   readOnly: true
          # - name: varlog
          #   mountPath: /var/log
          #   readOnly: true
          # - name: index-syslog
          #   mountPath: /var/tmp/index_syslog/
          #   readOnly: true
      volumes:
      - name: config
        configMap:
          defaultMode: 0640
          name: filebeat-config
      - name: offline-log
        hostPath:
          path: {{ .Values.global.rundeck.offlineLogFolder }}
          type: DirectoryOrCreate
      # - name: varlibdockercontainers
      #   hostPath:
      #     path: /var/lib/docker/containers
      # - name: varlog
      #   hostPath:
      #     path: /var/log
      # - name: index-syslog
      #   hostPath:
      #     path: /data/syslog-rundeck/index_syslog/

