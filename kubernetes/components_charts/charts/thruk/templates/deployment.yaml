apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: thruk
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: {{ .Values.updateStrategy }}
    {{- if (eq "Recreate" .Values.updateStrategy) }}
    rollingUpdate: null
    {{- end }}
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: thruk
  template:
    metadata:
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: thruk
    spec:
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
      {{- end }}
      containers:
        - name: http-thruk
          image: {{ include "thruk.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.securityContext.enabled }}
          securityContext:
            runAsUser: {{ .Values.securityContext.runAsUser }}
          {{- end }}

          env:
            - name: TZ
              value: {{ include "common.timezone" ( dict "timezone" .Values.timezone "global" .Values.global) }}
            - name: BACKEND_NAME
              value: {{ .Values.thrukConfig.backendName | quote }}
            - name: BACKEND_ID
              value: {{ .Values.thrukConfig.backendId | quote }}
            - name: BACKEND_TYPE
              value: {{ .Values.thrukConfig.backendType | quote }}
            - name: BACKEND_IP
              value: {{ .Values.thrukConfig.backendIp | quote }}
            - name: BACKEND_PORT
              value: {{ .Values.thrukConfig.backendPort | quote }}
          ports:
            - name: http-thruk
              containerPort: 80
      {{- if and .Values.global.sharedPersistenceVolume .Values.global.sharedVolume.enabled }}
          volumeMounts:
            {{- if .Values.thruk_backend_config.enable }}
            - name: thruk-config
              mountPath: /etc/thruk/thruk_local.conf
              subPath: thruk_local.conf
            {{- end }}

            {{- range .Values.global.sharedPersistenceVolume }}

            {{- if has "thruk" .shareFor }}
            - name: {{ .volumeName }}
              mountPath: {{ .path }}
            {{- end }}

            {{- end }}

      volumes:
        {{- if .Values.thruk_backend_config.enable }}
        - name: thruk-config
          configMap:
            name: {{ include "common.names.fullname" . }}-thruk-config
        {{ end }}
        {{- range .Values.global.sharedPersistenceVolume }}

        {{- if has "thruk" .shareFor }}
        - name: {{ .volumeName }}
          persistentVolumeClaim:
            claimName: {{ .pvcName }}
        {{- end }}

        {{- end }}


      {{- end  }}

